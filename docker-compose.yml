version: '3'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      - db
      - citus-worker
    networks:
      - backend
  db:
    container_name: "db"
    image: postgres
    restart: unless-stopped
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    networks:
      - backend
  db-slave-one:
    container_name: "db-slave-one"
    image: postgres
    restart: unless-stopped
    ports:
      - '5433:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    networks:
      - backend
  citus-master:
    container_name: "citus-master"
    image: "citusdata/citus:12.1.3"
    ports:
      - '5434:5432'
    labels: ["com.citusdata.role=Master"]
    environment: &CITUS_AUTH
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      PGUSER: "postgres"
      PGPASSWORD: "postgres"
      POSTGRES_HOST_AUTH_METHOD: "trust"
      CITUS_HOST: "citus-master"
    networks:
      - backend
  citus-worker:
    image: "citusdata/citus:12.1.3"
    labels: ["com.citusdata.role=Worker"]
    depends_on: [ citus-manager ]
    environment: *CITUS_AUTH
    command: "/wait-for-manager.sh"
    volumes:
      - healthcheck-volume:/healthcheck
    networks:
      - backend
  citus-manager:
    container_name: "citus-manager"
    image: "citusdata/membership-manager:0.3.0"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - healthcheck-volume:/healthcheck
    depends_on: [ citus-master ]
    environment: *CITUS_AUTH
    networks:
      - backend
volumes:
  healthcheck-volume:
networks:
  backend:
